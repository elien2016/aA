c
n
hand_cards
hand_cards.key(arrays[indices[0]])
display single_values
undisplay 15
single_values
singles_values
n
count(arrays)
arrays
display highest_arrays_count
display singles_values
n
display highest_arrays
s
n
display indices
n
display hand_cards
display arrays
s
n
s
n
c
n
hand_cards.key(arrays[indices.first])
arrays[indices.first]
s
n
display indices
n
display highest_two_pair
n
display two_pairs
n
display count
s
n
display arrays
n
display hand_cards
display hands
display hand
undisplay 2
undisplay 1
s
rankings[highest_hand]
rankings[highest_hand].length
rankings
n
highest_hand
rankings
HANDS[highest_idx]
[HANDS[highest_idx]
hands
rankings.length
rankings
display highest_hand
n
display highest_idx
q!
rankings.keys.map { |k| HANDS.index(k) }.max
rankings
hands
highest_idx
rankings.keys.map { |k| HANDS.index(k) }.max
rankings.keys.map { |k| HANDS.index(k) }
HANDS.index(:two_pair)
HANDS.find_index(4)
HANDS
HANDS.index(4)
rankings.keys
highest_idx
rankings
n
rankings
n
q!
calc_pot
winning_hands
n
display winning_hands
n
@players
@current_players
n
s
n
calc_pot
s
n
c
n
undisplay 1
n
@players.length
n
@players.length
display @players
n
s
exit
n
winners
s
n
@current_players
s
n
r
n
@players.length
@players
calc_pot
n
s
n
s
n
c
n
s
n
display player
n
undisplay 4
undisplay 3
delete 3
n
display player.pot
display raise
s
c
n
display player.pot
display raise
s
exit
winning_hands
@current_players
display winning_hands
winning_hands
calc_pot
winners
c
n
s
n
c
n
display raise
n
display player.pot
n
calc_pot
s
